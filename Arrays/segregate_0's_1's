#naive approach 
static void separate0and1(int arr[], int n) 
    { 
        int count = 0; 
        for (int i = 0; i < n; i++) { 
            if (arr[i] == 0) 
                count++; 
        } 
          for (int i = 0; i < count; i++) 
            arr[i] = 0; 
        for (int i = count; i < n; i++) 
            arr[i] = 1; 
    } 
 #Time Complexity : O(n)
 #Space Complexity : O(1)
 
 #using 2 pointers 
  void segregate0and1(int arr[], int size)  
    {
        int left = 0, right = size - 1; 
          while (left < right)  
        { 
            while (arr[left] == 0 && left < right) 
               left++;
            while (arr[right] == 1 && left < right) 
                right--; 
            if (left < right)  
            { 
                arr[left] = 0; 
                arr[right] = 1; 
                left++; 
                right--; 
            } 
        } 
    } 
#Time complexity : O(n)
#Space Complexity : O(1)
